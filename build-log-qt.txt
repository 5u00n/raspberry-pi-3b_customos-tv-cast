[0;32m[BUILD][0m üçì Building Custom Raspberry Pi 3B OS with Auto-Starting GUI
[0;32m[BUILD][0m ============================================================

[0;35m[STEP][0m 1/8: Cloning pi-gen repository...
[0;32m[BUILD][0m ‚úÖ pi-gen already exists
[0;35m[STEP][0m 2/8: Cleaning previous builds...
[0;32m[BUILD][0m ‚úÖ Cleaned
[0;35m[STEP][0m 3/8: Creating custom configuration...
[0;32m[BUILD][0m ‚úÖ Configuration created
[0;35m[STEP][0m 4/8: Creating custom stage with your features...
[0;32m[BUILD][0m ‚úÖ Package stage created
[0;32m[BUILD][0m ‚úÖ Custom scripts stage created
[0;32m[BUILD][0m ‚úÖ All stages configured
[0;35m[STEP][0m 5/8: Starting Docker build (this takes 30-60 minutes)...
[0;34m[INFO][0m Building your custom Raspberry Pi OS...
[0;34m[INFO][0m The image will include:
[0;34m[INFO][0m   ‚úÖ Auto-login as user 'pi'
[0;34m[INFO][0m   ‚úÖ Desktop environment (LXDE)
[0;34m[INFO][0m   ‚úÖ Your custom GUI auto-starts on boot
[0;34m[INFO][0m   ‚úÖ AirPlay receiver service
[0;34m[INFO][0m   ‚úÖ Google Cast receiver service
[0;34m[INFO][0m   ‚úÖ Web dashboard on port 8080
[0;34m[INFO][0m   ‚úÖ File sharing via Samba
[0;34m[INFO][0m   ‚úÖ SSH enabled

#0 building with "desktop-linux" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 563B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/debian:trixie
#2 DONE 3.7s

#3 [internal] load .dockerignore
#3 transferring context: 92B done
#3 DONE 0.0s

#4 [1/3] FROM docker.io/library/debian:trixie@sha256:fd8f5a1df07b5195613e4b9a0b6a947d3772a151b81975db27d47f093f60c6e6
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 27.85kB done
#5 DONE 0.0s

#6 [2/3] RUN apt-get -y update &&     apt-get -y install --no-install-recommends         git vim parted         quilt coreutils qemu-user-static debootstrap zerofree zip dosfstools e2fsprogs        libarchive-tools libcap2-bin rsync grep udev xz-utils curl xxd file kmod bc         binfmt-support ca-certificates fdisk gpg pigz arch-test     && rm -rf /var/lib/apt/lists/*
#6 CACHED

#7 [3/3] COPY . /pi-gen/
#7 DONE 0.0s

#8 exporting to image
#8 exporting layers done
#8 writing image sha256:8eb452b6ba8de0c3b703ebe9e4272bcbc1effc69b6609c0414883802b778feda done
#8 naming to docker.io/library/pi-gen done
#8 DONE 0.0s

View build details: docker-desktop://dashboard/build/desktop-linux/desktop-linux/qy0d3zu55xlhrqjsc2myemrmo
Checking native armhf executable support...
armhf: not supported on this machine/kernel
WARNING: Only a native build environment is supported. Checking emulated support...
armhf: ok
[17:36:14] Begin /pi-gen
[17:36:14] Begin /pi-gen/stage0
[17:36:14] Begin /pi-gen/stage0/prerun.sh
WARNING: RELEASE does not match the intended option for this branch.
         Please check the relevant README.md section.
setarch: failed to set personality to linux32: Invalid argument
[17:36:14] End /pi-gen/stage0/prerun.sh
[17:36:14] Begin /pi-gen/stage0/00-configure-apt
[17:36:14] Begin /pi-gen/stage0/00-configure-apt/00-run.sh
./00-run.sh: line 3: /pi-gen/work/CustomRaspberryPi3B/stage0/rootfs/etc/apt/sources.list: No such file or directory
[17:36:14] Build failed
